from __future__ import annotations
from telegram import InlineKeyboardMarkup, InlineKeyboardButton

def main_menu():
    kb = [
        [InlineKeyboardButton("üß≠ –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Ñ—Ä–∞–∑—É", callback_data="menu_classify")],
        [InlineKeyboardButton("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å .xlsx –ª–æ–≥–∏", callback_data="menu_upload")],
        [InlineKeyboardButton("üßæ –û—á–µ—Ä–µ–¥—å —Ä–µ–≤—å—é (HITL)", callback_data="menu_hitl")],
        [InlineKeyboardButton("üì¶ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞—Ç–∞—Å–µ—Ç–∞", callback_data="menu_export")],
        [InlineKeyboardButton("üìà –ú–µ—Ç—Ä–∏–∫–∏", callback_data="menu_metrics")],
    ]
    return InlineKeyboardMarkup(kb)

def top_candidates_buttons(cands):
    buttons = [[InlineKeyboardButton(f"{i+1}. {cid} ({p:.2f})", callback_data=f"pick_domain:{cid}")] 
               for i,(cid,p) in enumerate(cands[:3])]
    buttons.append([InlineKeyboardButton("‚ùå –ù–µ —Ç–æ / OOS", callback_data="pick_domain:oos")])
    return InlineKeyboardMarkup(buttons)

def hitl_item_buttons(domains):
    row = [InlineKeyboardButton(d, callback_data=f"hitl_choose:{d}") for d in domains[:3]]
    kb = [row, [InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="hitl_skip")]]
    return InlineKeyboardMarkup(kb)
